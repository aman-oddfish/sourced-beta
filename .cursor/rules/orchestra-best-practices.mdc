---
description: 
globs: 
---
# Orchestra Best Practices

## Purpose
Orchestra is a development and debugging toolkit that provides:
- Performance monitoring
- Animation debugging
- Grid visualization
- Minimap navigation
- Command palette

## Component Structure
- Keep debugging tools in separate components
- Implement proper TypeScript types
- Support enable/disable functionality
- Handle performance impact

## Features
### Stats
- Implement FPS monitoring
- Track memory usage
- Monitor render times
- Support performance marks

### Theatre
- Support animation debugging
- Implement scene controls
- Handle timeline management
- Support animation export

### Grid
- Visualize layout grid
- Support responsive breakpoints
- Show column guides
- Support customization

### Minimap
- Provide navigation overview
- Support quick navigation
- Handle large documents
- Implement proper scaling

### Command Palette (CMDO)
- Implement command search
- Support keyboard shortcuts
- Handle command execution
- Provide command suggestions

## Best Practices
```typescript
/**
 * Example Orchestra component
 */
export function OrchestraComponent() {
  const { enabled } = useOrchestra()
  
  if (!enabled) return null
  
  return (
    <div className="orchestra-component">
      {/* Implementation */}
    </div>
  )
}
```

## Performance
- Only enable in development
- Implement proper lazy loading
- Handle cleanup properly
- Minimize performance impact

## Development Mode
- Support hot reloading
- Provide clear debugging info
- Handle development errors
- Support quick iterations

## Usage Examples
```typescript
// Importing Orchestra components
import { Stats } from '~/orchestra/stats'
import { Grid } from '~/orchestra/grid'
import { Minimap } from '~/orchestra/minimap'
import { CMDO } from '~/orchestra/cmdo'

// Using Orchestra
function App() {
  return (
    <>
      {process.env.NODE_ENV === 'development' && (
        <>
          <Stats />
          <Grid />
          <Minimap />
          <CMDO />
        </>
      )}
      {/* App content */}
    </>
  )
}
```

## Keyboard Shortcuts
- Document all shortcuts
- Support customization
- Handle conflicts
- Provide visual feedback

## Documentation
- Document usage patterns
- Include debugging guides
- Provide troubleshooting tips
- Include performance notes